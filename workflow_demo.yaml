functions:
  greet_user:
    code: "async def greet_user(name: str) -> str:\n    return f'Hello, {name}!'"
    type: embedded
  notify_user:
    code: "async def notify_user(data: str) -> bool:\n    print(f'Notifying with {data}')\n\
      \    return True"
    type: embedded
  process_data:
    function: process_data
    module: https://github.com/user/repo/blob/main/utils.py
    type: external
nodes:
  greet:
    delay: 1.0
    function: greet_user
    inputs:
    - user_name
    output: greeting
    parallel: false
    retries: 3
    timeout: null
  notify:
    delay: 1.0
    function: notify_user
    inputs:
    - processed_data
    output: notification_sent
    parallel: false
    retries: 3
    timeout: null
  process:
    delay: 1.0
    function: process_data
    inputs:
    - greeting
    output: processed_data
    parallel: false
    retries: 3
    timeout: null
workflow:
  start: greet
  transitions:
  - condition: null
    from: greet
    to: process
  - condition: ctx.get('processed_data') != ''
    from: process
    to: notify
