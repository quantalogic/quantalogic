functions:
  greet:
    type: embedded
    code: 'def greet(user_name): return f''Hello, {user_name}!'''
    module: null
    function: null
  farewell:
    type: embedded
    code: 'def farewell(user_name): return f''Goodbye, {user_name}!'''
    module: null
    function: null
  monitor:
    type: embedded
    code: |-
      async def monitor(event):
                  print(f'[EVENT] {event.event_type.value} @ {event.node_name or "workflow"}')
                  if event.result:
                      print(f'Result: {event.result}')
                  if event.exception:
                      print(f'Error: {event.exception}')
    module: null
    function: null
nodes:
  start:
    function: greet
    sub_workflow: null
    llm_config: null
    output: start_result
    retries: 3
    delay: 1.0
    timeout: null
    parallel: false
  end:
    function: farewell
    sub_workflow: null
    llm_config: null
    output: end_result
    retries: 3
    delay: 1.0
    timeout: null
    parallel: false
workflow:
  start: start
  transitions:
  - from: start
    to: end
    condition: null
observers:
- monitor
